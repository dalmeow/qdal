{
  "hash": "fd879ac35590b4e4b405a53e64107f06",
  "result": {
    "engine": "knitr",
    "markdown": "# Gaussian models {#sec-gauss-model}\n\n![](https://img.shields.io/badge/Area-Statistics-red) ![](https://img.shields.io/badge/Area-R-green)\n\n\n\nIn the context of a quantitative research study, one simple objectives could be to figure out the probability distribution of the variable of interest: Voice Onset Time, number of telic verbs, informativity score, acceptability ratings, reaction times, and so on. Let's imagine we are interested in understanding more about the nature of reaction times in auditory lexical decision tasks (lexical decision tasks in which the target is presented aurally rather than in writing). We can revisit the RT data from above to try and address the following research question:\n\n> RQ: In a typical auditory lexical decision task, what are the mean and standard deviation of reaction times (RTs)?\n\nNow, you might wonder why the mean and the standard deviation? This is because we are assuming that reaction times (i.e the population of reaction times, rather than our specific sample) are distributed according to a Gaussian probability distribution. It is usually the onus of the researcher to assume a probability distribution family. You will learn some heuristics for picking a distribution family later, but for now the Gaussian family will be a safe assumption to make. In statistical notation, we can write:\n\n$$\n\\text{RT} \\sim Gaussian(\\mu, \\sigma)\n$$\n\nwhich you can read as: \"reaction times are distributed according to a Gaussian distribution with mean $\\mu$ and standard deviation $\\sigma$\". So the research question above is about finding the values of $\\mu$ and $\\sigma$.\n\nFor illustration's sake, let's assume the sample mean and standard deviation are also the population $\\mu$ and $\\sigma$: $Gaussian(\\mu = 1010, \\sigma = 318)$. @fig-mald-rt-distr shows the empirical sample probability distribution (in grey) and the theoretical sample probability distribution (in purple) based on the sample mean and SD: in other words, the purple curve is the density curve of the probability distribution $Gaussian(1010, 318)$, We have seen earlier that the sample mean and SD of the RTs from the `mald` data are biased, due to uncertainty and variability. What we are really after is the values of $\\mu$ and $\\sigma$ which are the mean and standard deviation of the Gaussian distribution of the *population* of RTs in auditory lexical decision tasks. In other words, we want to make inference from the sample to the population of RTs.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nmald <- readRDS(\"data/tucker2019/mald_1_1.rds\")\n\nrt_mean <- mean(mald$RT)\nrt_sd <- sd(mald$RT)\nrt_mean_text <- glue(\"mean: {round(rt_mean)} ms\")\nrt_sd_text <- glue(\"SD: {round(rt_sd)} ms\")\nx_int <- 2000\n\nggplot(data = tibble(x = 0:300), aes(x)) +\n  geom_density(data = mald, aes(RT), colour = \"grey\", fill = \"grey\", alpha = 0.2) +\n  stat_function(fun = dnorm, n = 101, args = list(rt_mean, rt_sd), colour = \"#9970ab\", linewidth = 1.5) +\n  scale_x_continuous(n.breaks = 5) +\n  geom_vline(xintercept = rt_mean, colour = \"#1b7837\", linewidth = 1) +\n  geom_rug(data = mald, aes(RT), alpha = 0.1) +\n  annotate(\n    \"label\", x = rt_mean + 1, y = 0.0015,\n    label = rt_mean_text,\n    fill = \"#1b7837\", colour = \"white\"\n  ) +\n  annotate(\n    \"label\", x = x_int, y = 0.0015,\n    label = rt_sd_text,\n    fill = \"#8c510a\", colour = \"white\"\n  ) +\n  annotate(\n    \"label\", x = x_int, y = 0.001,\n    label = \"theoretical sample\\ndistribution\",\n    fill = \"#9970ab\", colour = \"white\"\n  ) +\n  annotate(\n    \"label\", x = x_int, y = 0.0003,\n    label = \"empirical sample\\ndistribution\",\n    fill = \"grey\", colour = \"white\"\n  ) +\n  labs(\n    title = \"Theoretical sample distribution of reaction times\",\n    subtitle = glue(\"Gaussian distribution: mean = {round(rt_mean)} ms, SD = {round(rt_sd)}\"),\n    x = \"RT (ms)\", y = \"Relative probability (density)\"\n  )\n```\n\n::: {.cell-output-display}\n![](ch-gauss-model_files/figure-html/fig-mald-rt-distr-1.png){#fig-mald-rt-distr width=672}\n:::\n:::\n\n\nA statistical tool we can use to obtain an estimate of $\\mu$ and $\\sigma$ is a Gaussian model. A Gaussian model is a statistical model that estimates the values of the parameters of a Gaussian distribution, i.e. $\\mu$ and $\\sigma$. Since the values of the parameters are uncertain, we can estimate a probability distribution of the parameters from the data, rather than just their values. This is what a Bayesian Gaussian model does.\n\n## Prior probability distributions\n\nAs mentioned in @sec-freq-bayes, the essence of Bayesian inference is updating prior knowledge with . the estimation of posterior probability distributions from prior probability distributions and data. In practical terms, you need prior probability distributions, or **priors** for short, and data.\n\n\\[XXX illustration of prior to posterior\\]\n\nPriors have to be specified by the researcher.\n\nParameter values can be modelled to come from Gaussian distributions themselves. So, for the mean $\\mu$, we can estimate a Gaussian distribution, with its own mean and standard deviation, $\\mu_1$ and $\\sigma_1$. For the standard deviation $\\sigma$, we can estimate a *half* Gaussian distribution: why half? Because standard deviations cannot be negative, we can simply include the positive side of a Gaussian distribution centred at 0 (i.e. with mean = 0). In other words, we assume $\\sigma$ to be distributed according to $Gaussian(0, \\sigma_2)$. We can extend the model mathematical notation above to include the distributions of $\\mu$ and $\\sigma$.\n\n$$\n\\begin{align}\n\\text{RT} & \\sim Gaussian(\\mu, \\sigma)\\\\\n\\mu & \\sim Gaussian(\\mu_1, \\sigma_1)\\\\\n\\sigma & \\sim HalfGaussian(\\mu_2 = 0, \\sigma_2)\\\\\n\\end{align}\n$$\n",
    "supporting": [
      "ch-gauss-model_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}