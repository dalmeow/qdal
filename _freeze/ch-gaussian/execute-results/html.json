{
  "hash": "93cb9fceb8ed400f52fed20d6efd91a1",
  "result": {
    "engine": "knitr",
    "markdown": "# Working with distributions {#sec-gaussian}\n\n![](https://img.shields.io/badge/Area-Statistics-red) ![](https://img.shields.io/badge/Area-R-green)\n\n## The Gaussian distribution\n\n\n\nIn the previous section, we have seen that you can visualise probability distributions by plotting the probability mass or density function for theoretical probabilities and by using kernel density estimation for sample (aka empirical) distributions. Visualising probability distributions is more practical than listing all the possible values and their probability (especially with continuous variables—since they are continuous there is an infinite number of values!). Another convenient way to express probability distributions is to specify a set of parameters, which can reconstruct the entire distribution. With theoretical distributions, the parameters allow you to reconstruct exact distributions, while empirical distributions can usually be only approximated. That's the whole point of taking a sample: you want to reconstruct the \"underlying\" probability distribution that generated the sample, in other words the (theoretical) probability distribution of the population.\n\nDifferent **probability distribution families** have a different number of parameters and different parameters. A probability family is an abstraction of specific probability distributions that can be represented with the same set of parameters. An example of a probability distribution family is the **Gaussian** \\[ˈgaʊsɪən\\] **probability distribution**, also called the \"normal\" distribution and nick-named the \"bell-curve\", because it looks like the shape of a bell. @fig-gauss should make this more obvious.\n\n\n::: {.cell fig-caption='The Gaussian probability distribution.'}\n\n```{.r .cell-code  code-fold=\"true\"}\nggplot() +\n  aes(x = seq(-4, 4, 0.01), y = dnorm(seq(-4, 4, 0.01))) +\n  geom_path(colour = \"sienna\", linewidth = 2) +\n  labs(\n    x = element_blank(), y = \"Density\"\n  )\n```\n\n::: {.cell-output-display}\n![](ch-gaussian_files/figure-html/fig-gauss-1.png){#fig-gauss width=672}\n:::\n:::\n\n\nThe Gaussian distribution is a continuous probability distribution and it has two parameters:\n\n-   The **mean**, represented with the Greek letter $\\mu$ \\[mjuː\\]. This parameter is the probability's central tendency. Values around the mean have higher probability than values further away from the mean.\n\n-   The **standard deviation**, represented with the Greek letter $\\sigma$ \\[ˈsɪgmə\\]. This parameter is the probability's dispersion around the mean. The higher $\\sigma$ the greater the spread (i.e. the dispersion) of values around the mean.\n\nYou have already encountered means and standard deviations in @sec-summaries. It is no coincidence that the go-to summary measures for continuous variables are the mean and the standard deviation. When you don't know exactly what the underlying distribution of a variable is and all you want is a measure of central tendency and of dispersion, one assumes a Gaussian distribution and calculates mean and standard deviations. Note that in most cases we know a bit more than that and it fact the Gaussian distribution is very rare in nature. This is why we will call it Gaussian and not \"normal\", since it is only \"normal\" from a statistical-theoretical perspective (it has simple mathematical properties that makes it easy to use in applied statistics).\n\n::: callout-tip\n### Gaussian distribution\n\nThe Gaussian distribution (also called \"normal\" and nick-named the \"bell curve\") is a continuous probability distribution family defined by a mean $\\mu$ and a standard deviation $\\sigma$.\n\n$$\nGaussian(\\mu, \\sigma)\n$$\n:::\n\n@fig-gauss-msd shows Gaussian distributions with fixed standard deviation (2) but different means (-5, 0, 10) in @fig-gauss-msd-1 and Gaussian distributions with fixed mean (5) but different SDs (1, 2, 4) in @fig-gauss-msd-2. The mean shifts the distribution horizontally (lower values to the left, higher values to the right), while the SD affects the width of the distribution: lower SDs correspond to a narrower or tighter distribution, while higher SDs correspond to a wider distribution. Since the total area under the curve has to sum to 1, if the distribution is narrower, the peak will also be relatively higher, while with a wider distribution the peak will be lower. You have seen this in @fig-density-rt-word.\n\n\n::: {#fig-gauss-msd .cell layout-ncol=\"2\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nx <- seq(-10, 20, length.out = 1000)\nmeans <- c(0, -5, 10)\nsd_fixed <- 2\n\ndf_means <- crossing(x = x, mean = means) |> \n  mutate(\n    y = dnorm(x, mean = mean, sd = sd_fixed),\n    mean = factor(mean)\n  ) |> \n  arrange(mean, x)\n\nmu <- ggplot(df_means, aes(x = x, y = y, color = mean)) +\n  geom_line(linewidth = 1) +\n  labs(x = element_blank(), y = \"Density\", caption = \"SD = 2.\")\n\nsds <- c(1, 2, 4)\nmean_fixed <- 5\n\ndf_sds <- crossing(x = x, SD = sds) |> \n  mutate(\n    y = dnorm(x, mean = mean_fixed, sd = SD),\n    SD = factor(SD)\n  ) |> \n  arrange(SD, x)\n\nsig <- ggplot(df_sds, aes(x = x, y = y, color = SD)) +\n  geom_line(linewidth = 1) +\n  labs(x = element_blank(), y = \"Density\", caption = \"Mean = 5.\")\n\nplot(mu)\nplot(sig)\n```\n\n::: {.cell-output-display}\n![Different means, same SD.](ch-gaussian_files/figure-html/fig-gauss-msd-1.png){#fig-gauss-msd-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Same mean, different SDs.](ch-gaussian_files/figure-html/fig-gauss-msd-2.png){#fig-gauss-msd-2 width=672}\n:::\n\nIllustrating Gaussian distributions with different means and standard deviations.\n:::\n\n\nIn statistical notation, we write the Gaussian distribution family like this:\n\n$$\nGaussian(\\mu, \\sigma)\n$$\n\nSpecific types of Gaussian distributions will have specific values for the parameters $\\mu$ and $\\sigma$: for example $Gaussian(0, 1)$, $Gaussian(50, 32)$, $Gaussian(2.5, 6.25)$, and so on. All of these specific probability distributions belong to the Gaussian family. So hopefully you understand now why we say that a distribution family stands for specific families: here $Gaussian(\\mu, \\sigma)$ stands as the parent of all the specific Gaussian distributions (i.e. all of the Gaussian distributions with a specific mean and SD).\n\n## Cumulative distribution function (CDF) {#sec-intervals}\n\nA usueful way to investigate probability distributions is to ask what is the probability that the random variable the probability represents is less than or equal to a certain value. For example, for a distribution $Gaussian(0, 1)$ of the random variable $X$, what is the probability that $X$ is -1 or less? \\@fig-p gives us a visual explanation: the size of the shaded area under the density curve is the probability that $X \\leq -1$. This works because the area under the density curve must add to 1, so that the entire area under the curve covers 100% of the probability distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nq <- -1\np <- pnorm(q)\nlbl <- sprintf(\"P(X \\u2264 %.0f) = %.4f\", q, p)\n\ndf <- tibble(x = seq(-4, 4, length.out = 2000)) |>\n  mutate(dens = dnorm(x))\n\ndf_shade <- df |> filter(x <= q)\n\nggplot(df, aes(x, dens)) +\n  geom_line(linewidth = 1) +\n  geom_area(data = df_shade, aes(y = dens), alpha = 0.4) +\n  geom_vline(xintercept = q, linetype = \"dashed\") +\n  annotate(\"text\", x = q - 3, y = dnorm(0) * 0.4, label = lbl, hjust = 0) +\n  labs(\n    y = \"Density\", x = \"X\"\n  )\n```\n\n::: {.cell-output-display}\n![Illustration of the lower-tail probability with Gaussian(0, 1).](ch-gaussian_files/figure-html/fig-p-1.png){#fig-p width=672}\n:::\n:::\n\n\nThe mathematical function that calculates the probability that a variable is less than or equal to a value is the **cumulative distribution function** (CDF). In R, you can get the CDF value of a Gaussian distribution (i.e. the probability that $X$ is less than or equal to any value $x$) with the `pnorm()` function (`p` for probability and `norm` for normal or Gaussian). The function takes three arguments: the $x$ value, the mean and the SD of the Gaussian distribution (the default are mean = 0 and SD = 1).\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(q = -1, mean = 0, sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1586553\n```\n\n\n:::\n\n```{.r .cell-code}\n# or\npnorm(-1, 0, 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1586553\n```\n\n\n:::\n\n```{.r .cell-code}\n# or\npnorm(-1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1586553\n```\n\n\n:::\n:::\n\n\n::: callout-tip\n### Cumulative Distribution Function\n\nThe **Cumulative Distribution Function** (CDF) is a function that gives, for any value $x$, the probability that the random variable $X$ takes a value less than or equal to $x$.\n:::\n\n::: callout-warning\n## Exercise 1\n\nCalculate the probability that $X$ is:\n\n-   less or equal than -2 with $Gaussian(0, 1)$\n\n-   less or equal than +1.75 with $Gaussian(0, 1)$.\n\n-   less or equal than 700 with $Gaussian(900, 200)$.\n:::\n\nBy default, `pnorm()` uses the lower-tail CDF: this returns the \"less than or equal to\" probability. It's on the \"lower\" tail of the distribution, or the tail to the left of the density peak. But we can also compute the upper-tail probability. @fig-quant-up shows an upper-tail probability with $X \\geq -1$ with $Gaussian(0, 1)$. To obtain the upper-tail probability with `pnorm()`, rather than the lower-tail probability, set `lower.tail` to `FALSE`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(-1, lower.tail = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8413447\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nq <- -1\np <- pnorm(q, lower.tail = FALSE)\nlbl <- sprintf(\"P(X \\u2265 %.0f) = %.4f\", q, p)\n\ndf <- tibble(x = seq(-4, 4, length.out = 2000)) |>\n  mutate(dens = dnorm(x))\n\ndf_shade <- df |> filter(x >= q)\n\nggplot(df, aes(x, dens)) +\n  geom_line(linewidth = 1) +\n  geom_area(data = df_shade, aes(y = dens), alpha = 0.4) +\n  geom_vline(xintercept = q, linetype = \"dashed\") +\n  annotate(\"text\", x = q + 3, y = dnorm(0) * 0.4, label = lbl, hjust = 0) +\n  labs(\n    y = \"Density\", x = \"X\"\n  )\n```\n\n::: {.cell-output-display}\n![Illustration of an upper-tail probability with Gaussian(0, 1).](ch-gaussian_files/figure-html/fig-quant-up-1.png){#fig-quant-up width=672}\n:::\n:::\n\n\n## Intervals\n\nProbability intervals provide a further way of locating and interpreting values within a probability distribution. They partition the distribution into regions associated with specified probability levels. A **quantile** is a value below which a given proportion of the distribution lies. You can think of this as the opposite of finding the probability given $x$: given the probability $q$, which is $x$? For a continuous distribution like the Gaussian, the *q*-th quantile (denoted $Q(q)$) is defined as the value $x$ such that:\n\n$$\nP(X \\leq x) = q, 0 \\leq q \\leq 1\n$$\n\nwhich is, $q$ is the probability that the outcome $X$ is less than or equal to $x$. So for example, given a Gaussian distribution with mean 0 and SD 1, which is the 0.15th quantile? The answer is shown in @fig-quant. The 0.15th quantile is approximately -1.04.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 0.15\nq <- qnorm(p)\nlbl <- sprintf(\"Q(%.2f) = %.4f\", p, q)\n\ndf <- tibble(x = seq(-4, 4, length.out = 2000)) |>\n  mutate(dens = dnorm(x))\n\ndf_shade <- df |> filter(x <= q)\n\nggplot(df, aes(x, dens)) +\n  geom_line(linewidth = 1) +\n  geom_area(data = df_shade, aes(y = dens), alpha = 0.4) +\n  geom_vline(xintercept = q, linetype = \"dashed\") +\n  annotate(\"text\", x = q - 2.5, y = dnorm(0) * 0.4, label = lbl, hjust = 0) +\n  labs(\n    y = \"Density\", x = \"X\"\n  )\n```\n\n::: {.cell-output-display}\n![The 0.15th quantile of Gaussian(0, 1).](ch-gaussian_files/figure-html/fig-quant-1.png){#fig-quant width=672}\n:::\n:::\n\n\n::: callout-tip\n### Quantile\n\nA **quantile** is a value below which a given proportion of a probability distribution lies.\n:::\n\nIn R, `qnorm()` returns quantiles using the quantile function (think of it as the inverse of the CDF). It takes three arguments: the probability, and the mean and SD of the Gaussian distribution (again, by default 0 and 1 respectively). As with `pnorm()`, you can obtain the upper-tail quantile with `lower.tail = FALSE`. With a Gaussian distribution with mean 0 and SD 1, the upper-tail quantile value is the same the lower-tail but with opposite sign. The following code shows how to use `qnorm()` (the values are rounded to the second digit with `round(2)`).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Lower-tail quantile with Gaussian(0, 1)\nqnorm(0.15) |> round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -1.04\n```\n\n\n:::\n\n```{.r .cell-code}\n# Upper-tail quantile with Gaussian(0, 1)\nqnorm(0.15, lower.tail = FALSE) |> round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.04\n```\n\n\n:::\n\n```{.r .cell-code}\n# Lower-tail quantile with Gaussian(10, 2)\nqnorm(0.15, 10, 2) |> round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 7.93\n```\n\n\n:::\n\n```{.r .cell-code}\n# Upper-tail quantile with Gaussian(10, 2)\nqnorm(0.15, 10, 2, lower.tail = FALSE) |> round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 12.07\n```\n\n\n:::\n:::\n\n\n### Quartiles\n\n**Quartiles** are quantiles that split the distribution into four quarters, each holding 25% of the probability mass. With a Gaussian probability, the first quartile marks the point below which 25% of the area lies, the second quartile, also called the median (which you encountered in @sec-summaries), splits it at 50%, and the third quartile leaves 25% above it, so that it covers 75% of the area. Because of the symmetry of the Gaussian, the first and third quartiles are equidistant from the mean. @fig-quartiles shows quartiles on a Gaussian distribution with mean 0 and SD 1. Note how the second quartile (Q2) splits the distribution in half: 50% of the distribution is to the left of Q2 and the other 50% is to the right of it. The interval between the first (Q1) and third quartile (Q3) is called the inter-quartile range (IQR), which indicates the middle 50% of the probability distribution.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nquartiles <- qnorm(c(0, 0.25, 0.5, 0.75, 1))\nquart_labels <- c(\"Q1\", \"Q2 (median)\", \"Q3\")\n\ndf <- tibble(x = seq(-4, 4, length.out = 2000)) |>\n  mutate(dens = dnorm(x))\n\ndf <- df |> mutate(\n  quartile = case_when(\n    x <= quartiles[2] ~ \"Q1\",\n    x <= quartiles[3] ~ \"Q2\",\n    x <= quartiles[4] ~ \"Q3\",\n    TRUE ~ \"Q4\"\n  )\n)\n\nggplot(df, aes(x, dens, fill = quartile)) +\n  geom_area(alpha = 0.5) +\n  geom_line(linewidth = 1) +\n  scale_fill_brewer(type = \"seq\", direction = -1) +\n  geom_vline(xintercept = quartiles[2:4], linetype = \"dashed\", alpha = 0.5) +\n  annotate(\n    \"label\",\n    x = quartiles[2:4],\n    y = 0.2,\n    label = c(\"Q1\", \"Q2\", \"Q3\")\n  ) +\n  annotate(\n    \"text\",\n    x = c(-1.3, -0.35, 0.35, 1.3),\n    y = 0.05,\n    label = c(\"25%\", \"25%\", \"25%\", \"25%\")\n  ) +\n  annotate(\n    \"errorbar\",\n    xmin = quartiles[2], xmax = quartiles[4],\n    y = 0.1,\n    colour = \"purple\", linewidth = 1, width = 0.025\n  ) +\n  annotate(\n    \"text\",\n    x = 0, y = 0.12,\n    label = \"IQR\"\n  ) +\n  labs(\n    y = \"Density\", x = element_blank()\n  ) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![Quartiles of a Gaussian distribution.](ch-gaussian_files/figure-html/fig-quartiles-1.png){#fig-quartiles width=672}\n:::\n:::\n\n\nTo get the quartiles of a Gaussian distribution you can use the `qnorm()` function: a quartile is just a type of quantile. Q1 corresponds to the 0.25th quantile, Q2 to the 0.5th and Q3 to the 0.75th quantile.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqnorm(c(0.25, 0.5, 0.75)) |> round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] -0.67  0.00  0.67\n```\n\n\n:::\n:::\n\n\n::: callout-tip\n## Quartiles\n\n**Quartiles** are quantiles that split the distribution into four quarters, each holding 25% of the probability mass\n:::\n\n::: callout-warning\n#### Exercise 2\n\nCalculate the quartiles of the following Gaussian distributions.\n\n-   $Gaussian(10, 2)$.\n\n-   $Gaussian(900, 200)$.\n\n-   $Gaussian(-30, 10)$.\n:::\n\n### Percentiles\n\nAnother type of quantile are **percentiles**. These split the probability in 100 percentiles, each holding 1% of the probability mass. Percentiles are used to define central probability intervals, i.e. probability intervals that leave equal probability in both tails of the distribution. It is usually implied that you mean a central interval, so you don't really have to say \"central\" every time. A (central) 95% interval is defined as the interval between 2.5th and the 97.5th percentile of the distribution. @fig-ninetyfive illustrates the 95% interval of $Gaussian(0, 1)$. The shaded are is the 95% interval, while the two white areas at the tails hold each 2.5% of the distribution, thus making the rest 5% of the distribution not included in the 95% interval. Remember, probability intervals leave equal probability on both tails.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\np <- 0.15\n\ndf <- tibble(x = seq(-4, 4, length.out = 2000)) |>\n  mutate(dens = dnorm(x))\n\ndf_shade <- df |> filter(x >= qnorm(0.025) & x <= qnorm(0.975))\n\nggplot(df, aes(x, dens)) +\n  geom_area(data = df_shade, aes(y = dens), alpha = 0.4) +\n  geom_line(linewidth = 1) +\n  annotate(\n    \"label\", x = 0, y = 0.15, label = \"95% interval\"\n  ) +\n  annotate(\n    \"text\",\n    x = c(qnorm(0.025) - 0.1, qnorm(0.975) + 0.15), y = 0.1,\n    label = c(\"2.5th\", \"97.5th\")\n  ) +\n  labs(\n    y = \"Density\", x = \"X\"\n  )\n```\n\n::: {.cell-output-display}\n![The 95% interval of Gaussian(0, 1).](ch-gaussian_files/figure-html/fig-ninetyfive-1.png){#fig-ninetyfive width=672}\n:::\n:::\n\n\n::: callout-tip\n## Central probability intervals\n\nCentral **probability intervals** are intervals that leave equal probability in both tails of the distribution.\n\nA 95% interval is defined as the interval between the 2.5th and the 97.5th percentile.\n:::\n\n::: callout-note\n## Quiz 1\n\na. Which of the following percentiles define an 80% interval? <div class='webex-radiogroup' id='radio_KEDBPJHRYP'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_KEDBPJHRYP\" value=\"answer\"></input> <span>(0.1, 0.9)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_KEDBPJHRYP\" value=\"\"></input> <span>(0.2, 0.8)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_KEDBPJHRYP\" value=\"\"></input> <span>(0.05, 0.95)</span></label></div>\nb. Which of the following percentiles define a *non*-central 85% interval? <div class='webex-radiogroup' id='radio_TWSZGNSEHI'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_TWSZGNSEHI\" value=\"\"></input> <span>(0.075, 0.925)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_TWSZGNSEHI\" value=\"answer\"></input> <span>(0.1, 0.95)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_TWSZGNSEHI\" value=\"\"></input> <span>(0.05, 0.95)</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_TWSZGNSEHI\" value=\"\"></input> <span>(0.15, 0.85)</span></label></div>\nb. Which interval do the 40th and 60th percentile define? <div class='webex-radiogroup' id='radio_FTZBUZXUBW'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FTZBUZXUBW\" value=\"\"></input> <span>A 60% central interval.</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FTZBUZXUBW\" value=\"\"></input> <span>A 20% non-central interval.</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FTZBUZXUBW\" value=\"\"></input> <span>A 40% non-central interval.</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FTZBUZXUBW\" value=\"answer\"></input> <span>A 20% central interval.</span></label></div>\n:::\n",
    "supporting": [
      "ch-gaussian_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}