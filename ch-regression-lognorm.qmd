# Log-normal regression {#sec-regression-lognorm}

<!--# TODO: lognormal -->

```{r}
#| label: setup
#| include: false

library(tidyverse)
theme_set(theme_light())
library(brms)
library(posterior)
library(bayesplot)
library(ggdist)
```

In @sec-probability, we talked about skewness of distributions in relation to the density plots of reaction times. In @sec-gauss-model, we further explained that it is the onus of the researcher to decide on a distribution family when fitting regression models and we said that, in the absence of more specific knowledge, the Gaussian distribution is a safe assumption to make. Note that the choice of distribution family should be based as much as possible on theoretical grounds (as opposed to empirical). In other words, you shouldn't plot the variable to check with distribution it might follow (more on this in the Important box below).

There are heuristics one can follow to pick a theoretically grounded distribution. The major ones are listed in @sec-outcome, so you can refer to that section in the appendix, but in this chapter we will focus on one type of variables and the default distribution choice: i.e. variables that can only take on values that are positive numbers. These variables, in the absence of more specific knowledge, can be assumed to be from a log-normal distribution.

## Log-normal distribution

```{r}
#| label: mald

mald <- readRDS("data/tucker2019/mald_1_1.rds")
```

```{r}
#| label: fig-rt-lognorm
mald |> 
  ggplot(aes(RT, fill = IsWord)) +
  geom_density(alpha = 0.5) +
  geom_rug()
```

```{r}
#| label: fig-rt-gaussian-log
mald |> 
  ggplot(aes(log(RT), fill = IsWord)) +
  geom_density(alpha = 0.5) +
  geom_rug()
```

::: callout-important
**Looking at a density plot is not a safe way to decide if you need to log a variable or if a variable is log-normal.**

There are cases where the density plot is a combination of multiple underlying distributions with different means and SDs that makes it look as if it is skewed.

```{r}
set.seed(123)

# Sample sizes
n <- 2000

# Three different normal distributions
x1 <- rnorm(n, mean = 2, sd = 0.5)
x2 <- rnorm(n, mean = 3, sd = 1.5)
x3 <- rnorm(n, mean = 4, sd = 3)

dat <- tibble(
  x = c(x1, x2, x3),
  gr = rep(c("a", "b", "c"), each = n)
)

dat |> 
  ggplot(aes(x)) +
  geom_density() +
  geom_rug()

dat |> 
  ggplot(aes(x, fill = gr)) +
  geom_density(alpha = 0.5) +
  geom_rug()
```
:::

```{r}
#| label: rt-bm-1

rt_bm_1 <- brm(
  RT ~ IsWord,
  family = gaussian,
  data = mald,
  seed = 6725,
  file = "cache/ch-regression-cat-rt_bm_1"
)
```

```{r}
#| label: rt-bm-1-pp

pp_check(rt_bm_1, ndraws = 50)
```

$$
\begin{align}
RT_i & \sim LogNormal(\mu_i, \sigma)\\
\mu_i & = \beta_0 + \beta_1 \cdot sr_i\\
\end{align}
$$

```{r}
#| label: rt-bm-2

rt_bm_2 <- brm(
  RT ~ IsWord,
  family = lognormal,
  data = mald,
  cores = 4,
  seed = 6725,
  file = "cache/ch-regression-cat-rt_bm_2"
)
```

```{r}
#| label: rt-bm-2-pp

pp_check(rt_bm_2, ndraws = 50)
```

```{r}
#| label: rt-bm-2-cond

conditional_effects(rt_bm_2)
```

```{r}
#| label: rt-bm-2-draws

rt_bm_2_draws <- as_draws_df(rt_bm_2)

rt_bm_2_draws <- rt_bm_2_draws |>
  mutate(
    real_log = b_Intercept,
    nonce_log = b_Intercept + b_IsWordFALSE,
    real = exp(real_log),
    nonce_log = exp(nonce_log)
  )
```

